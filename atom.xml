<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DailyPractice</title>
  <icon>https://www.gravatar.com/avatar/cc9a647fcbaea25a21f5c1eeafd637e6</icon>
  <subtitle>积累沉淀然爆发</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chenyunxuan.top/"/>
  <updated>2017-04-07T08:48:40.000Z</updated>
  <id>http://chenyunxuan.top/</id>
  
  <author>
    <name>Chenyunxuan</name>
    <email>admin@chenyunxuan.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GIT实用指北</title>
    <link href="http://chenyunxuan.top/2017/02/24/GIT%E5%AE%9E%E7%94%A8%E6%8C%87%E5%8C%97/"/>
    <id>http://chenyunxuan.top/2017/02/24/GIT实用指北/</id>
    <published>2017-02-24T04:39:04.000Z</published>
    <updated>2017-04-07T08:48:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o84sfajoj.bkt.clouddn.com/GIT%E6%8C%87%E5%8D%97_1?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10" alt="image"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目</li><li>Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管</li><li>Git 是 Linus Torvalds 为了帮助管理 Linux内核开发而开发的一个开放源码的版本控制软件</li></ul><a id="more"></a><h2 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h2><h3 id="常用命令列表"><a href="#常用命令列表" class="headerlink" title="常用命令列表"></a>常用命令列表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">git help</div><div class="line">usage: git [--version] [--help] [-C &lt;path&gt;] [-c name=value]</div><div class="line">           [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path]</div><div class="line">           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]</div><div class="line">           [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;]</div><div class="line">           &lt;command&gt; [&lt;args&gt;]</div><div class="line"></div><div class="line">The most commonly used git commands are:</div><div class="line">   add        Add file contents to the index</div><div class="line">   bisect     Find by binary search the change that introduced a bug</div><div class="line">   branch     List, create, or delete branches</div><div class="line">   checkout   Checkout a branch or paths to the working tree</div><div class="line">   clone      Clone a repository into a new directory</div><div class="line">   commit     Record changes to the repository</div><div class="line">   diff       Show changes between commits, commit and working tree, etc</div><div class="line">   fetch      Download objects and refs from another repository</div><div class="line">   grep       Print lines matching a pattern</div><div class="line">   init       Create an empty Git repository or reinitialize an existing one</div><div class="line">   log        Show commit logs</div><div class="line">   merge      Join two or more development histories together</div><div class="line">   mv         Move or rename a file, a directory, or a symlink</div><div class="line">   pull       Fetch from and integrate with another repository or a local branch</div><div class="line">   push       Update remote refs along with associated objects</div><div class="line">   rebase     Forward-port local commits to the updated upstream head</div><div class="line">   reset      Reset current HEAD to the specified state</div><div class="line">   rm         Remove files from the working tree and from the index</div><div class="line">   show       Show various types of objects</div><div class="line">   status     Show the working tree status</div><div class="line">   tag        Create, list, delete or verify a tag object signed with GPG</div></pre></td></tr></table></figure><p>以上是通过githelp命令得出的所有常用的git操作符</p><hr><h2 id="命令详解"><a href="#命令详解" class="headerlink" title="命令详解"></a>命令详解</h2><h3 id="add"><a href="#add" class="headerlink" title="add"></a>add</h3><ul><li>git add .  &ensp;&ensp;提交新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件</li><li>git add -A  &ensp;&ensp;提交所有变化</li><li>git add -u  &ensp;&ensp;提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)</li><li>git add -p  &ensp;&ensp;提交分布式，每次提交会提示是否提交</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">git add .</div><div class="line">git status</div><div class="line"></div><div class="line"># Changes to be committed:</div><div class="line">#   new file:   add-me</div><div class="line">#   modified:   change-me</div><div class="line"># Changed but not updated:</div><div class="line">#   deleted:    delete-me</div><div class="line"></div><div class="line">git reset</div><div class="line"></div><div class="line">git add -u</div><div class="line">git status</div><div class="line"></div><div class="line"># Changes to be committed:</div><div class="line">#   modified:   change-me</div><div class="line">#   deleted:    delete-me</div><div class="line"># Untracked files:</div><div class="line">#   add-me</div><div class="line"></div><div class="line">git reset</div><div class="line"></div><div class="line">git add -A</div><div class="line">git status</div><div class="line"></div><div class="line"># Changes to be committed:</div><div class="line">#   new file:   add-me</div><div class="line">#   modified:   change-me</div><div class="line">#   deleted:    delete-me</div></pre></td></tr></table></figure><h3 id="bisect"><a href="#bisect" class="headerlink" title="bisect"></a>bisect</h3><p>Git-bisect &ensp;&ensp;用于通过二分查找来查寻版本的错误，一般用于大工程<br><a href="https://www.oschina.net/translate/letting-git-bisect-help-you" target="_blank" rel="external">详解</a></p><p>设定前后两个版本，一个为good, 一个为bad, 使用二分查找中间的版本，进行编译，看是否出现问题，如果没有，在该版本与之前设定的bad之间再进行二分；如果有错误，则在该版本与之前设定的good之间进行二分,分别设定了两个版本，一个good, 一个bad, 只要有一个good和一个bad设定完成，就出输出可能的中间版本，你可以将该版本checkout， 编译看是否有bug</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ git bisect start</div><div class="line">$ git bisect bad                 # Current version is bad</div><div class="line">$ git bisect good v2.6.13-rc2    # v2.6.13-rc2 was the last version</div><div class="line">                                 # tested that was good</div></pre></td></tr></table></figure><h3 id="branch"><a href="#branch" class="headerlink" title="branch"></a>branch</h3><p>Git-branch &ensp;&ensp;用于查看该工程存在的分支以及对分支进行操作的命令符</p><ul><li>git branch &ensp;&ensp;查看本地分支</li><li>git branch -a &ensp;&ensp;查看远程分支与本地分支，会先列出本地分支</li><li>git branch -r &ensp;&ensp;查看远程分支</li><li>git branch -d [branchName] &ensp;&ensp;删除某个本地分支</li><li>git branch -d -r [branchName]&ensp;&ensp;删除某个远程分支</li><li>git branch -m oldbranch newbranch&ensp;&ensp; 重命名本地的某个分支</li><li>git branch -v &ensp;&ensp;查看各个分支最后一次提交</li><li>git branch –-merged &ensp;&ensp;查看哪些分支合并入当前分支</li><li>git branch –-no-merged &ensp;&ensp;查看哪些分支未合并入当前分支</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">$ git branch</div><div class="line">  dev</div><div class="line">  lyxy-snapshot-1.0.0</div><div class="line">  master</div><div class="line">  release</div><div class="line">  wcxy-snapshot-1.0.0</div><div class="line">* zhbx-snapshot-1.0.0</div><div class="line"></div><div class="line">$ git branch -a</div><div class="line">  dev</div><div class="line">  lyxy-snapshot-1.0.0</div><div class="line">  master</div><div class="line">  release</div><div class="line">  wcxy-snapshot-1.0.0</div><div class="line">* zhbx-snapshot-1.0.0</div><div class="line">  remotes/origin/HEAD -&gt; origin/master</div><div class="line">  remotes/origin/cyfw-snapshot-1.0.0</div><div class="line">  remotes/origin/dev</div><div class="line">  remotes/origin/lyxy-snapshot-1.0.0</div><div class="line">  remotes/origin/master</div><div class="line">  remotes/origin/release</div><div class="line">  </div><div class="line">$ git branch -r</div><div class="line">  origin/HEAD -&gt; origin/master</div><div class="line">  origin/cyfw-snapshot-1.0.0</div><div class="line">  origin/dev</div><div class="line">  origin/lyxy-snapshot-1.0.0</div><div class="line">  origin/master</div><div class="line">  origin/release</div><div class="line"></div><div class="line">$ git branch -v</div><div class="line">  dev                 41400c0 [ahead 1] &lt;x&gt;修改BUG.</div><div class="line">  lyxy-snapshot-1.0.0 c60ee6b Merge branch &apos;release&apos;</div><div class="line">  master              8385d99 [behind 18] 修改接口中参数没有加上company_id的SQL,去掉项目中多余文件</div><div class="line">  release             54cac55 [behind 9] +(个人中心学习路径完成与未完成数量的统计)</div><div class="line">  wcxy-snapshot-1.0.0 afefba1 [ahead 1] &lt;+&gt;中传网络学院的定制化修改</div><div class="line">* zhbx-snapshot-1.0.0 a6f5cfd +(用户模块:课件完成百分比配置)</div></pre></td></tr></table></figure><h3 id="checkout"><a href="#checkout" class="headerlink" title="checkout"></a>checkout</h3><p>git checkout  &ensp;&ensp;最为常用的两种情形是创建分支和切换分支</p><ul><li>git checkout [branch] &ensp;&ensp;直接切换到指定分支,分支本身已存在的情况</li><li>git checkout -b branch-name  origin/branch-name &ensp;&ensp;从远程分支上拉下分支并切换到该分支</li><li>git checkout -b branch-name TagName &ensp;&ensp;以某标签点为基础创建新分支</li><li>git checkout -b branchName &nbsp;&nbsp;创建新分支，并切换到该分支。等于一次执行两条命令。创建新分支：git branch branchName，切换到新分支：git checkout branchName</li><li>git checkout ．&nbsp;放弃当前修改回退到当前分支的最后一次提交</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//基于TAG v8.4.0 开出新分支并切换到该分支</div><div class="line">$ git checkout -b tzcpa-snapshot-1.0.0 v8.4.0</div><div class="line">Switched to a new branch &apos;tzcpa-snapshot-1.0.0&apos;</div></pre></td></tr></table></figure><h3 id="clone"><a href="#clone" class="headerlink" title="clone"></a>clone</h3><p>git clone  &ensp;&ensp;用于克隆代码服务器上的代码到本地</p><ul><li>git clone xxx.git &ensp;&ensp;最原始的命令直接克隆代码服务器上最新的master分支代码</li><li>git clone -b [new_branch_name]  xxx.git  &ensp;&ensp;clone时创建新的分支替代默认Origin HEAD（master）</li><li>git clone xxx.git “directName” &ensp;&ensp;clone到指定目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//克隆时候出现以下代码表示clone成功</div><div class="line">$ git clone ssh://xxxx/2b/Android/mooc-Android-client</div><div class="line">Cloning into &apos;mooc-Android-client&apos;...</div><div class="line">remote: Counting objects: 3516, done</div><div class="line">remote: Finding sources: 100% (3516/3516)</div><div class="line">remote: Total 3516 (delta 1041), reused 3514 (delta 1041)</div><div class="line">Receiving objects: 100% (3516/3516), 29.12 MiB | 1.12 MiB/s, done.</div><div class="line">Resolving deltas: 100% (1041/1041), done.</div><div class="line">Checking connectivity... done.</div><div class="line">Checking out files: 100% (3161/3161), done.</div></pre></td></tr></table></figure><h3 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h3><p>git commit &ensp;&ensp;提交工作空间的修改内容到本地仓库中.需与git add联合使用</p><ul><li>git commit 提交暂存区的代码到本地仓库，回车后输入注释然后再回车，用于注释多余一行的提交</li><li>git commit -m ‘xxx’ 提交暂存区的代码到本地仓库,m后面用引号，里面填写注释</li></ul><h3 id="diff"><a href="#diff" class="headerlink" title="diff"></a>diff</h3><p>git diff &ensp;&ensp;比较当前版本与对应的远程分支的区别</p><ul><li>git diff &ensp;&ensp;此命令比较的是工作目录(Working tree)和暂存区域快照(index)之间的差异<br>也就是修改之后还没有暂存起来的变化内容。</li><li>git diff –stat &ensp;&ensp;显示简要的比较结果，只会显示出具体的增减行数，不会具体到代码行</li><li>git diff [branchName] &ensp;&ensp;比较当前修改与另一个指定分支间的改动</li><li>git diff [branchName] – [filePath] &ensp;&ensp; 比较当前分支的某个文件与指定分支的这个文件的改动</li><li>git diff [branchName] [branchName] &ensp;&ensp;比较两个分支间的改动,可用head^ head代替前一个版本和当前版本</li><li>git diff [SHA1] [SHA2] &ensp;&ensp;比较两个提交点间的改动,sha表示提交的changeId</li><li>git diff [branchName]…[branchName]  &ensp;&ensp;比较两个分支所有的改动</li></ul><p>– ps:所有的git diff模式都可以通过输入大写字母Q退出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">//列举出从tzcpa-snapshot-1.0.0到mater分支所有改动的简要模式</div><div class="line">$ git diff tzcpa-snapshot-1.0.0...master --stat</div><div class="line"> filters/dev/system-config.properties               |   32 +-</div><div class="line"> .../com/zxy/mobile/base/constant/Constants.java    |    3 +</div><div class="line"> .../mobile/base/constant/SystemConfigConstant.java |    5 +-</div><div class="line"> .../mobile/base/service/impl/BaseServiceImpl.java  |   11 +</div><div class="line"> .../com/zxy/mobile/foundation/util/StringUtil.java |    6 +-</div><div class="line"> .../mobile/listener/SaveLoginRecordListener.java   |   36 +-</div><div class="line"> .../service/ask/service/impl/AskServiceImpl.java   |   15 +-</div><div class="line"> .../service/impl/CommunityServiceImpl.java         |    8 +-</div><div class="line"> .../community/service/impl/TrendsServiceImpl.java  |   16 +-</div><div class="line"> .../course/service/impl/CourseServiceImpl.java     |    4 +-</div><div class="line"> </div><div class="line">//列举出从tzcpa-snapshot-1.0.0到mater分支所有改动,就会列举出详细的区别，+表示新增内容，-表示删减的内容</div><div class="line">$ git diff tzcpa-snapshot-1.0.0...master</div><div class="line">diff --git a/filters/dev/system-config.properties b/filters/dev/system-config.properties</div><div class="line">index 3333d2a..0d4efeb 100644s/CommonUtils.java     |  117 +-</div><div class="line">--- a/filters/dev/system-config.properties.java     |    2 +-</div><div class="line">+++ b/filters/dev/system-config.propertiesss        | 6364 ++++++++++++++++++++</div><div class="line">@@ -1,37 +1,44 @@share/css/style.css                |  140 +-</div><div class="line">-jdbc.url=jdbc:mysql://10.162.61.11:3306/zxystudentdb_yy</div><div class="line">+#db</div><div class="line">+jdbc.url=jdbc:mysql://121.41.24.23:3306/zxystudentdb</div><div class="line"> jdbc.user=zxystudentadmin</div><div class="line"> jdbc.password=dreamtech</div></pre></td></tr></table></figure><h3 id="fetch"><a href="#fetch" class="headerlink" title="fetch"></a>fetch</h3><p>git fetch &ensp;&ensp;取回branch在服务器上的最新状态</p><ul><li>git fetch &ensp;&ensp;取回所有分支的最新代码到本地</li><li>git fetch [branchName] &ensp;&ensp;取回某个分支的最新代码到本地</li><li>git fetch -p &ensp;&ensp;取回代码服务器上的最新分支库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$ git fetch -p</div><div class="line">remote: Counting objects: 265, done</div><div class="line">remote: Finding sources: 100% (131/131)</div><div class="line">remote: Total 131 (delta 52), reused 129 (delta 52)</div><div class="line">Receiving objects: 100% (131/131), 125.86 KiB | 0 bytes/s, done.</div><div class="line">Resolving deltas: 100% (52/52), completed with 34 local objects.</div><div class="line">From ssh://xxxxx:29418/2b/xxxx-xxx-new</div><div class="line">   9daaa54..67731b6  ansp-snapshot-1.0.0 -&gt; origin/ansp-snapshot-1.0.0</div><div class="line">   00cc0ce..73179e5  dev        -&gt; origin/dev</div><div class="line">   7873606..11ebdbc  master     -&gt; origin/master</div><div class="line">   7873606..9d7fd98  release    -&gt; origin/release</div></pre></td></tr></table></figure><h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><p>git grep &ensp;&ensp;git自带的检索器，可以方便查找</p><ul><li>git grep xxxx &ensp;&ensp;查找出所有带xxxx的文件以及该字符在这个文件的位置</li><li>git grep -n xxxx &ensp;&ensp;查找出所有带xxxx的文件以及该字符在这个文件的具体位置，精确到行数</li><li>git grep -c xxxx &ensp;&ensp;统计这个字符在各个文件出现的次数</li><li>git grep –name-only xxx &ensp;&ensp;查找出所有带xxxx字符的文件的名称</li><li>git grep xxxx [TagName]&ensp;&ensp;在某个标记点查找带XXXX字符的文件</li><li>git grep -e ‘xxxx’ –and -e ‘hhh’&ensp;&ensp;查找出一行既包含xxx又包含hhh的文件</li><li>git grep –all-match -e ‘xxxx’ -e ‘hhh’&ensp;&ensp;查找出一行包含xxx或者包含hhh的文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">//查找userInfo</div><div class="line">$ git grep userInfo</div><div class="line">src/main/java/com/zxy/mobile/service/user/service/impl/UserServiceImpl.java:            User userInfo = User.dao.findFirs</div><div class="line">//显示行数</div><div class="line">$ git grep -n userInfo</div><div class="line">src/main/java/com/zxy/mobile/service/user/service/impl/UserServiceImpl.java:456:                User userInfo = User.daos</div><div class="line">//统计出现的字数</div><div class="line">$ git grep -c userInfo</div><div class="line">src/main/java/com/zxy/mobile/service/user/service/impl/UserServiceImpl.java:28</div><div class="line">//显示出现该字符的文件名</div><div class="line">$ git grep --name-only userInfo</div><div class="line">src/main/java/com/zxy/mobile/service/user/service/impl/UserServiceImpl.java</div><div class="line">//基于标签版本8.4.0进行搜索</div><div class="line">$ git grep userInfo v8.4.0</div><div class="line">v8.4.0:src/main/java/com/zxy/mobile/service/user/service/impl/UserServiceImpl.java:             User userInfo = User.dao</div><div class="line">//关联查找，因为没有符合条件的文件</div><div class="line">$ git grep -e log --and -e hello</div><div class="line">src/main/webapp/share/index.html:                       console.log(&apos;hello&apos;)</div><div class="line">//或查找</div><div class="line">$ git grep --all-match -e hello -e log</div><div class="line">src/main/webapp/share/index.html:              src/main/webapp/share/index.html:                       &lt;div class=&quot;weui_dialog&quot;&gt;</div><div class="line">src/main/webapp/share/index.html:                               </div><div class="line">&lt;div class=&quot;weui_dialog_hd&quot;&gt;</div><div class="line">src/main/webapp/share/index.html:                                       </div><div class="line">&lt;strong class=&quot;weui_dialog_title&quot;&gt;温馨提示&lt;/strosrc/main/webapp/share/index.html:                               </div><div class="line">src/main/webapp/share/index.html:                               &lt;div class=&quot;weui_dialog_ft&quot;&gt;</div><div class="line">src/main/webapp/share/index.html:                                       &lt;a href=&quot;javascript:void(0);&quot;    </div><div class="line">src/main/webapp/share/index.html:                       console.log(&quot;data:&quot; + data);</div><div class="line">src/main/webapp/share/index.html:                               src/main/webapp/share/index.html:                       console.log(&apos;hello&apos;)</div></pre></td></tr></table></figure><h3 id="blame"><a href="#blame" class="headerlink" title="blame"></a>blame</h3><p>git blame &ensp;&ensp;可以打印出git的提交记录，精确到行，戏称’缉凶神器’ </p><ul><li>git blame [fileName]</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o84sfajoj.bkt.clouddn.com/GIT%E6%8C%87%E5%8D%97_1?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Git是一款免费、开源的分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目&lt;/li&gt;
&lt;li&gt;Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管&lt;/li&gt;
&lt;li&gt;Git 是 Linus Torvalds 为了帮助管理 Linux内核开发而开发的一个开放源码的版本控制软件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="版本控制" scheme="http://chenyunxuan.top/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
      <category term="git" scheme="http://chenyunxuan.top/tags/git/"/>
    
      <category term="版本控制" scheme="http://chenyunxuan.top/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript完全手册</title>
    <link href="http://chenyunxuan.top/2017/02/24/JavaScript%E5%AE%8C%E5%85%A8%E6%89%8B%E5%86%8C/"/>
    <id>http://chenyunxuan.top/2017/02/24/JavaScript完全手册/</id>
    <published>2017-02-24T04:39:04.000Z</published>
    <updated>2017-09-05T07:43:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o84sfajoj.bkt.clouddn.com/201708011_javascript?imageView2/1/w/900/h/400/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/23/gravity/SouthEast/dx/10/dy/10" alt="image"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>  由于 JavaScript “弱语言”的性质，使得其在使用过程中异常的宽松灵活，但也极为容易“中招”。这些坑往往隐藏着，所以必须擦亮双眼，才能在学习与应用 JS 的道路上走的一帆风顺。</p><a id="more"></a><h2 id="JavaScript转换问题"><a href="#JavaScript转换问题" class="headerlink" title="JavaScript转换问题"></a>JavaScript转换问题</h2><h3 id="字符转数字类型"><a href="#字符转数字类型" class="headerlink" title="字符转数字类型"></a>字符转数字类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">var num = +&quot;45&quot;;</div><div class="line">alert(typeof num); //number</div><div class="line">var num = &quot;45&quot; - 0;</div><div class="line">alert(typeof num); //number</div><div class="line">var num = &quot;45&quot; * 1;</div><div class="line">alert(typeof num); //number</div><div class="line">var num = &quot;45&quot; / 1;</div><div class="line">alert(typeof num); //number</div><div class="line"></div><div class="line">alert(&quot;123a&quot; - &quot;2bc&quot;); //NaN</div><div class="line">alert(parseInt(&quot;123a&quot;) - parseInt(&quot;2bc&quot;)); //121</div><div class="line">alert(Number(&quot;123a&quot;) - Number(&quot;2bc&quot;)); //NaN</div></pre></td></tr></table></figure><h3 id="判断是否为纯数字"><a href="#判断是否为纯数字" class="headerlink" title="判断是否为纯数字"></a>判断是否为纯数字</h3><p>如果要得到字符串是不是由纯数字组成可以这么判断：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var string = &quot;000&quot;;</div><div class="line">alert(+string + &quot;&quot; !== &quot;NaN&quot;);</div></pre></td></tr></table></figure><h3 id="字符或者数字转布尔类型"><a href="#字符或者数字转布尔类型" class="headerlink" title="字符或者数字转布尔类型"></a>字符或者数字转布尔类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">!!&quot;false&quot;  //true</div><div class="line">!!1  //true</div><div class="line">!!undefined  //false</div></pre></td></tr></table></figure><h3 id="数字或者布尔类型转字符"><a href="#数字或者布尔类型转字符" class="headerlink" title="数字或者布尔类型转字符"></a>数字或者布尔类型转字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var a=1;</div><div class="line">bolean a=false; </div><div class="line">a.toString();</div></pre></td></tr></table></figure><h2 id="JavaScript截取链接后的参数"><a href="#JavaScript截取链接后的参数" class="headerlink" title="JavaScript截取链接后的参数"></a>JavaScript截取链接后的参数</h2><p> 例如<br>://xxxx.xxx.xxx/oauth/index.html#login?id=f08d10b76f45dfeb303dc3eac23ed8e7&amp;type=1231<br>要这样才能获取到?后面的参数,截取出来呢,上代码</p><p>###方法一</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">getQueryParams: function(name) &#123;</div><div class="line">       var i, ilen, strs, keyName, keyValue,</div><div class="line">           params = &#123;&#125;,</div><div class="line">           url = window.location.href;</div><div class="line">       if (url.indexOf(&quot;?&quot;) &gt; -1) &#123;</div><div class="line">           var index = url.indexOf(&quot;?&quot;);</div><div class="line">           strs = url.substring(index + 1);</div><div class="line">           console.log(strs);</div><div class="line">           strs = strs.split(&quot;&amp;&quot;);</div><div class="line">           ilen = strs.length;</div><div class="line">           for (i = 0; i &lt; ilen; i++) &#123;</div><div class="line">               var indexEqual = strs[i].indexOf(&apos;=&apos;);</div><div class="line">               keyName = strs[i].substring(0, indexEqual);</div><div class="line">               keyValue = strs[i].substring(indexEqual + 1);</div><div class="line">               params[keyName] = keyValue;</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">       return params;</div><div class="line">   &#125;</div></pre></td></tr></table></figure><p>此方法可以直接返回一个{}的前端集合,通过params.参数名,如params.id就能获取到?后面id参数值</p><p>###方法二</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">GetQueryString(name) &#123;</div><div class="line">   let reg = new RegExp(&quot;(^|&amp;)&quot;+ name +&quot;=([^&amp;]*)(&amp;|$)&quot;);</div><div class="line">    let r = window.location.search.substr(1).match(reg);</div><div class="line">       if(r!=null)return  unescape(r[2]); return null;</div><div class="line">&#125;,</div></pre></td></tr></table></figure><p>name传入你要查找的参数即可,返回值就是这个参数的值</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o84sfajoj.bkt.clouddn.com/201708011_javascript?imageView2/1/w/900/h/400/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/23/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;  由于 JavaScript “弱语言”的性质，使得其在使用过程中异常的宽松灵活，但也极为容易“中招”。这些坑往往隐藏着，所以必须擦亮双眼，才能在学习与应用 JS 的道路上走的一帆风顺。&lt;/p&gt;
    
    </summary>
    
      <category term="js" scheme="http://chenyunxuan.top/categories/js/"/>
    
    
      <category term="js" scheme="http://chenyunxuan.top/tags/js/"/>
    
      <category term="干货" scheme="http://chenyunxuan.top/tags/%E5%B9%B2%E8%B4%A7/"/>
    
  </entry>
  
  <entry>
    <title>前后端参数加解密方案</title>
    <link href="http://chenyunxuan.top/2017/02/24/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%8F%82%E6%95%B0%E5%8A%A0%E8%A7%A3%E5%AF%86%E6%96%B9%E6%A1%88/"/>
    <id>http://chenyunxuan.top/2017/02/24/前后端参数加解密方案/</id>
    <published>2017-02-24T04:39:04.000Z</published>
    <updated>2017-08-11T09:46:39.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o84sfajoj.bkt.clouddn.com/201708011_block?imageView2/1/w/900/h/400/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/23/gravity/SouthEast/dx/10/dy/10" alt="image"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>  HTTP信息传输总会遇到参数被劫持进行二次传输的尴尬境地,为了避免这种情况,建议在前端请求的时候对上行参数进行加密传输,后端再进行解密,防止信息被盗取</p><a id="more"></a><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>前端: 框架采用VUE.JS,加密可以选用方案较为完善的<a href="https://www.npmjs.com/package/crypto-js" target="_blank" rel="external">CryptoJS</a> 本文采用CryptoJS其中的aes加密方案为例<br>后端: 也采用对应的aes加密进行参数解析</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>用npm进行安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install crypto-js</div></pre></td></tr></table></figure><p>这时项目的package.json中就会引入crypto-js,打开package.json会出现以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&quot;dependencies&quot;: &#123;</div><div class="line">  &quot;crypto-js&quot;: &quot;^3.1.9-1&quot;,</div><div class="line">  &quot;element-ui&quot;: &quot;^1.4.2&quot;,</div><div class="line">  &quot;vue&quot;: &quot;^2.2.1&quot;,</div><div class="line">  &quot;vue-resource&quot;: &quot;^1.2.1&quot;,</div><div class="line">  &quot;vue-router&quot;: &quot;^2.3.1&quot;</div><div class="line">&#125;,</div></pre></td></tr></table></figure><p>这时我们就可以开始在前端JS中进行加密操作了</p><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>通过java自带的加密包即可实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">import javax.crypto.Cipher;</div><div class="line">import javax.crypto.KeyGenerator;</div><div class="line">import javax.crypto.spec.SecretKeySpec;</div></pre></td></tr></table></figure><p>##代码实现</p><p>###JS部分<br>因为整个项目的请求参数都需要加密,所以这里抽离出一段请求JS<br>感谢这篇文章给的启发<a href="http://jser.io/2014/08/19/how-to-use-aes-in-crypto-js-to-encrypt-and-decrypt" target="_blank" rel="external">crypto.js的坑</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">Vue.prototype.getData = function (url,params) &#123;</div><div class="line">        //js获取当前日期</div><div class="line">    var date = new Date();</div><div class="line">    // 引入 CryptoJS</div><div class="line">     var CryptoJS = require(&quot;crypto-js&quot;);</div><div class="line">     //由于Java就是按照128bit给的，需要使用CryptoJS.enc.Utf8.parse方法才可以将key转为128bit的。</div><div class="line">     var key = CryptoJS.enc.Utf8.parse(&quot;公钥(需要16位)&quot;);</div><div class="line">       //因为CryptoJS的规范,需要把date.getTime()转化为String类型才可以正确的加密</div><div class="line">     var encryptedData = CryptoJS.AES.encrypt(&quot;&quot;+date.getTime(),key , &#123;</div><div class="line">        mode: CryptoJS.mode.ECB,</div><div class="line">        padding: CryptoJS.pad.Pkcs7</div><div class="line">    &#125;);</div><div class="line">     params = params || &#123;&#125;</div><div class="line">     //把结果转化为String类型再传入后端</div><div class="line">    params.token = encryptedData.toString()</div><div class="line">    //返回VUE-resource对象</div><div class="line">       return this.$http.post(url,params,&#123; emulateJSON: true &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>在每个模块请求的代码中引入这个方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">function:getRemain ()&#123;</div><div class="line">let vm = this;</div><div class="line">vm.getData(usages.api.vacation,&#123;&#125;).then((res)=&gt;&#123;</div><div class="line">   if (res.ok) &#123;</div><div class="line"> //doSomething</div><div class="line">      &#125;</div><div class="line">&#125;,(res)=&gt;&#123;</div><div class="line">  //fail</div><div class="line">   &#125;)</div><div class="line">  &#125;</div></pre></td></tr></table></figure><p>###Java部分<br>首先要创建一个加密工具类,用于封装加密解密方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">public class EncryptUtil &#123;</div><div class="line">    private static final String KEY = &quot;16位加密匙&quot;;</div><div class="line">    private static final String ALGORITHMSTR = &quot;AES/ECB/PKCS5Padding&quot;;</div><div class="line">    public static String base64Encode(byte[] bytes)&#123;</div><div class="line">        return encodeBase64String(bytes);</div><div class="line">    &#125;</div><div class="line">    public static byte[] base64Decode(String base64Code) throws Exception&#123;</div><div class="line">        return new BASE64Decoder().decodeBuffer(base64Code);</div><div class="line">    &#125;</div><div class="line">    public static byte[] aesEncryptToBytes(String content, String encryptKey) throws Exception &#123;</div><div class="line">        KeyGenerator kgen = KeyGenerator.getInstance(&quot;AES&quot;);</div><div class="line">        kgen.init(128);</div><div class="line">        Cipher cipher = Cipher.getInstance(ALGORITHMSTR);</div><div class="line">        cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(encryptKey.getBytes(), &quot;AES&quot;));</div><div class="line">        return cipher.doFinal(content.getBytes(&quot;utf-8&quot;));</div><div class="line">    &#125;</div><div class="line">    public static String aesEncrypt(String content, String encryptKey) throws Exception &#123;</div><div class="line">        return base64Encode(aesEncryptToBytes(content, encryptKey));</div><div class="line">    &#125;</div><div class="line">    public static String aesDecryptByBytes(byte[] encryptBytes, String decryptKey) throws Exception &#123;</div><div class="line">        KeyGenerator kgen = KeyGenerator.getInstance(&quot;AES&quot;);</div><div class="line">        kgen.init(128);</div><div class="line">        Cipher cipher = Cipher.getInstance(ALGORITHMSTR);</div><div class="line">        cipher.init(Cipher.DECRYPT_MODE, new SecretKeySpec(decryptKey.getBytes(), &quot;AES&quot;));</div><div class="line">        byte[] decryptBytes = cipher.doFinal(encryptBytes);</div><div class="line">        return new String(decryptBytes);</div><div class="line">    &#125;</div><div class="line">    public static String aesDecrypt(String encryptStr, String decryptKey) throws Exception &#123;</div><div class="line">        return aesDecryptByBytes(base64Decode(encryptStr), decryptKey);</div><div class="line">    &#125;</div><div class="line">    /** * 测试 * */</div><div class="line">    public static void main(String[] args) throws Exception &#123;</div><div class="line">        String content = &quot;Test&quot;;  </div><div class="line">        System.out.println(&quot;加密前：&quot; + content);</div><div class="line">        System.out.println(&quot;加密密钥和解密密钥：&quot; + KEY);</div><div class="line">        String encrypt = aesEncrypt(content, KEY);</div><div class="line">        System.out.println(encrypt.length()+&quot;:加密后：&quot; + encrypt);</div><div class="line">        String decrypt = aesDecrypt(encrypt, KEY);</div><div class="line">        System.out.println(&quot;解密后：&quot; + decrypt);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>在方法中调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">EncryptUtil.aesDecrypt(&quot;&quot;,&quot;&quot;);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o84sfajoj.bkt.clouddn.com/201708011_block?imageView2/1/w/900/h/400/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/23/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;  HTTP信息传输总会遇到参数被劫持进行二次传输的尴尬境地,为了避免这种情况,建议在前端请求的时候对上行参数进行加密传输,后端再进行解密,防止信息被盗取&lt;/p&gt;
    
    </summary>
    
      <category term="js" scheme="http://chenyunxuan.top/categories/js/"/>
    
    
      <category term="js" scheme="http://chenyunxuan.top/tags/js/"/>
    
      <category term="干货" scheme="http://chenyunxuan.top/tags/%E5%B9%B2%E8%B4%A7/"/>
    
      <category term="java" scheme="http://chenyunxuan.top/tags/java/"/>
    
      <category term="算法" scheme="http://chenyunxuan.top/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC拦截器</title>
    <link href="http://chenyunxuan.top/2017/02/24/SpringMVC%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>http://chenyunxuan.top/2017/02/24/SpringMVC拦截器/</id>
    <published>2017-02-24T04:39:04.000Z</published>
    <updated>2017-08-14T07:29:13.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o84sfajoj.bkt.clouddn.com/GIT%E6%8C%87%E5%8D%97_1?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10" alt="image"></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>  java里的拦截器是动态拦截Action调用的对象，它提供了一种机制可以使开发者在一个Action执行的前后执行一段代码，也可以在一个Action执行前阻止其执行，同时也提供了一种可以提取Action中可重用部分代码的方式。在AOP中，拦截器用于在某个方法或者字段被访问之前，进行拦截,然后再之前或者之后加入某些操作。</p><a id="more"></a><h2 id="拦截器代码"><a href="#拦截器代码" class="headerlink" title="拦截器代码"></a>拦截器代码</h2><h3 id="java部分"><a href="#java部分" class="headerlink" title="java部分"></a>java部分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">public class HandlerInterceptorAdapter implements HandlerInterceptor &#123;   </div><div class="line">    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) </div><div class="line">            throws Exception&#123;</div><div class="line">    &#125;   </div><div class="line">    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</div><div class="line">            throws Exception&#123;</div><div class="line">    &#125;   </div><div class="line">    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</div><div class="line">            throws Exception&#123;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="spring-MVC配置部分"><a href="#spring-MVC配置部分" class="headerlink" title="spring-MVC配置部分"></a>spring-MVC配置部分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;!--配置拦截器, 多个拦截器,顺序执行 --&gt;</div><div class="line">   &lt;mvc:interceptors&gt;</div><div class="line">       &lt;mvc:interceptor&gt;</div><div class="line">           &lt;!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller --&gt;</div><div class="line">           &lt;mvc:mapping path=&quot;/ps/**&quot; /&gt;</div><div class="line">           &lt;!--&lt;mvc:mapping path=&quot;/user/**&quot; /&gt;--&gt;</div><div class="line">           &lt;!--&lt;mvc:mapping path=&quot;/test/**&quot; /&gt;--&gt;</div><div class="line">           &lt;bean class=&quot;com.weixin.InterceptorAdapter.HandlerInterceptorAdapter&quot;&gt;&lt;/bean&gt;</div><div class="line">       &lt;/mvc:interceptor&gt;</div><div class="line">       &lt;!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 --&gt;</div><div class="line">   &lt;/mvc:interceptors&gt;</div></pre></td></tr></table></figure><h2 id="拦截器用法"><a href="#拦截器用法" class="headerlink" title="拦截器用法"></a>拦截器用法</h2><h3 id="接口源码"><a href="#接口源码" class="headerlink" title="接口源码"></a>接口源码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//继承spring的拦截接口,实现以下三个方法</div><div class="line">public interface HandlerInterceptor &#123;</div><div class="line">    // 在业务处理器处理请求之前被调用</div><div class="line">    boolean preHandle(HttpServletRequest var1, HttpServletResponse var2, Object var3) throws Exception;</div><div class="line">    // 在业务处理器处理请求完成之后，生成视图之前执行</div><div class="line">    void postHandle(HttpServletRequest var1, HttpServletResponse var2, Object var3, ModelAndView var4) throws Exception;</div><div class="line">    // 在DispatcherServlet完全处理完请求之后被调用，可用于清理资源,日志打印</div><div class="line">    void afterCompletion(HttpServletRequest var1, HttpServletResponse var2, Object var3, Exception var4) throws Exception;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="preHandle详解"><a href="#preHandle详解" class="headerlink" title="preHandle详解"></a>preHandle详解</h3><p>preHandle 方法有三个参数,分别是HttpServletRequest HttpServletResponse Object<br>传参:</p><pre><code>- HttpServletRequest 控制程序在业务处理器前的请求参数- HttpServletResponse 控制程序在经过处理器后的返回参数- Object 被拦截的请求Action的实体</code></pre><p>返回值:</p><pre><code>- true表示继续流程- false表示流程中断，不会继续调用其他的拦截器或处理器，此时我们需要通过response来产生响应</code></pre><p>实例:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception&#123;</div><div class="line">    //计算出服务器当前时间</div><div class="line">    Long timeNowForServer=new Date().getTime();</div><div class="line">    //获取从前端接口请求的参数</div><div class="line">    if(null!=request.getParameter(&quot;token&quot;))&#123;</div><div class="line">    //因为前端请求做了加密,所以这里需要对应的解密过程</div><div class="line">        String token=EncryptUtil.aesDecrypt(request.getParameter(&quot;token&quot;),&quot;0000000000000000&quot;);</div><div class="line">        if(null!=token) &#123;</div><div class="line">            Long timeNowForClient = Long.parseLong(token);</div><div class="line">            //如果请求接口在五秒内</div><div class="line">            Long timeMinus = timeNowForServer - timeNowForClient;</div><div class="line">            if (-50000 &lt;= timeMinus &amp;&amp; timeMinus &lt;= 50000) &#123;</div><div class="line">                //继续接口流程</div><div class="line">                return true;</div><div class="line">            &#125; else &#123;</div><div class="line">                //返回相应的HTTP状态码,达到拦截的效果</div><div class="line">                //response.sendError(http状态码,页面显示的拦截原因);</div><div class="line">                response.sendError(405, &quot;Parameters illegal&quot;);</div><div class="line">                //打回这次操作,返回相应的response</div><div class="line">                return false;</div><div class="line">            &#125;</div><div class="line">        &#125;else&#123;</div><div class="line">            response.sendError(405, &quot;Parameters illegal&quot;);</div><div class="line">            return false;</div><div class="line">        &#125;</div><div class="line">    //或者请求地址中含有getUserInfo就放开对这个请求的拦截,等于白名单的效果</div><div class="line">    &#125;else if(request.getRequestURI().indexOf(&quot;getUserInfo&quot;)&gt;0)&#123;</div><div class="line">        return true;</div><div class="line">    &#125;else&#123;</div><div class="line">         //跳转到其他页面</div><div class="line">         response.sendRedirect(request.getContextPath() + &quot;/Login1.html&quot;);                  </div><div class="line">         return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>状态码可参照<a href="https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81" target="_blank" rel="external">HTTP状态码大全</a></p><h3 id="postHandle详解"><a href="#postHandle详解" class="headerlink" title="postHandle详解"></a>postHandle详解</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o84sfajoj.bkt.clouddn.com/GIT%E6%8C%87%E5%8D%97_1?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;  java里的拦截器是动态拦截Action调用的对象，它提供了一种机制可以使开发者在一个Action执行的前后执行一段代码，也可以在一个Action执行前阻止其执行，同时也提供了一种可以提取Action中可重用部分代码的方式。在AOP中，拦截器用于在某个方法或者字段被访问之前，进行拦截,然后再之前或者之后加入某些操作。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="http://chenyunxuan.top/categories/java/"/>
    
    
      <category term="java" scheme="http://chenyunxuan.top/tags/java/"/>
    
      <category term="拦截器" scheme="http://chenyunxuan.top/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建教程</title>
    <link href="http://chenyunxuan.top/2016/10/24/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <id>http://chenyunxuan.top/2016/10/24/博客搭建教程/</id>
    <published>2016-10-24T04:39:04.000Z</published>
    <updated>2016-10-24T10:12:06.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o84sfajoj.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20161024175522.png?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10" alt="image"></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>博客使用的是<a href="https://hexo.io/" target="_blank" rel="external">Hexo</a> 框架.<br>采用的主题为<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NEXT</a><br>采用的评论模板为<a href="http://duoshuo.com/" target="_blank" rel="external">多说</a></p><a id="more"></a><h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><h3 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h3><p><a href="http://opiece.me/2015/04/09/hexo-guide/#参考" target="_blank" rel="external">Hexo搭建个人博客</a><br>通过这篇文章可以搭建一个简单的hexo框架博客</p><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">theme: next</div><div class="line"></div><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy: #仓库类型</div><div class="line">  type: git    #部署类型, 本文使用Github</div><div class="line">  repo: </div><div class="line">    github: git@github.com:xxxxx/xxxxx.github.io.git #这里是github的地址</div><div class="line">  branch: master #分支</div></pre></td></tr></table></figure><p>以上是hexo文件中 _config.yml 文件中的配置。需要注意的点都有标注。<br>需要注意的是发布github中博客的仓库名称必须为xxx.github.io的形式。</p><hr><h2 id="coding"><a href="#coding" class="headerlink" title="coding"></a>coding</h2><h3 id="搭建步骤-1"><a href="#搭建步骤-1" class="headerlink" title="搭建步骤"></a>搭建步骤</h3><p><a href="https://segmentfault.com/a/1190000002900848?utm_source=tuicool" target="_blank" rel="external">Coding 上搭建 Hexo 个人博客</a><br>通过这篇文章可以了解怎么部署到coding上</p><h3 id="要点-1"><a href="#要点-1" class="headerlink" title="要点"></a>要点</h3><p>因为现在有两个推送源。所以对应的在 _config.yml中也要做修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># Deployment</div><div class="line">## Docs: https://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git    #部署类型, 本文使用Github</div><div class="line">  repo: </div><div class="line">    github: git@github.com:xxxx/xxx.github.io.git</div><div class="line">    coding: git@git.coding.net:xxx/xxxx.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p><p>这样配置能保证你每次推送都是推往github+coding两个方向。推送两个地方是为了后面进行域名绑定时，能够分别对海外网络和国内网络进行域名转向，保证国内外访问流畅。</p><h2 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>熟悉域名解析平台</li><li>当然一个域名也是必不可少的，推荐top域名，com域名太贵。个人网站没必要<h3 id="开始解析"><a href="#开始解析" class="headerlink" title="开始解析"></a>开始解析</h3>这里以万网为例：</li><li>coding的解析的记录值都是相同的，因为在coding中有配置域名，上文也有介绍</li><li>cname是域名一种转向解析，详情百度<br><img src="http://o84sfajoj.bkt.clouddn.com/201510242?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10" alt="image"><br>PS：github需要多创建一个文件CNAME,这样才能顺利解析域名,方法如下:<br><img src="http://o84sfajoj.bkt.clouddn.com/201510241?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10" alt="image"><br><img src="http://o84sfajoj.bkt.clouddn.com/201510243?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10" alt="image"></li></ul><h3 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h3><p>静静等待十分钟左右，就可以用你配好的域名访问博客了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o84sfajoj.bkt.clouddn.com/QQ%E6%88%AA%E5%9B%BE20161024175522.png?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;博客使用的是&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt; 框架.&lt;br&gt;采用的主题为&lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NEXT&lt;/a&gt;&lt;br&gt;采用的评论模板为&lt;a href=&quot;http://duoshuo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多说&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="博客搭建" scheme="http://chenyunxuan.top/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="hexo" scheme="http://chenyunxuan.top/tags/hexo/"/>
    
      <category term="博客" scheme="http://chenyunxuan.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://chenyunxuan.top/2014/12/22/hello-world/"/>
    <id>http://chenyunxuan.top/2014/12/22/hello-world/</id>
    <published>2014-12-22T04:39:04.000Z</published>
    <updated>2016-10-24T06:25:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://chenyunxuan.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://chenyunxuan.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://chenyunxuan.top/2014/12/22/%E6%97%A5%E7%A7%AF%E6%9C%88%E7%B4%AF/"/>
    <id>http://chenyunxuan.top/2014/12/22/日积月累/</id>
    <published>2014-12-22T04:39:04.000Z</published>
    <updated>2017-07-20T08:48:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://o84sfajoj.bkt.clouddn.com/201510211?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10" alt="image"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">人主之居也，如日月之明也。</div><div class="line">天下之所同侧目而视，侧耳而听，延颈举踵而望也。</div><div class="line">是故非澹泊（同：淡泊）无以明德，非宁静无以致远，非宽大无以兼覆，</div><div class="line">非慈厚无以怀众，非平正无以制断。</div></pre></td></tr></table></figure><a id="more"></a><ul><li>及分享 <a href="http://www.finalshares.com/" target="_blank" rel="external">http://www.finalshares.com/</a> </li><li>运营解决方案整合平台 <a href="http://www.devstore.cn/" target="_blank" rel="external">http://www.devstore.cn/</a></li><li>抢先电影 <a href="http://www.ashvsash.com/" target="_blank" rel="external">http://www.ashvsash.com/</a></li><li>恐怖电影 <a href="http://www.kb000.net/" target="_blank" rel="external">http://www.kb000.net/</a>  </li><li>网页模板 <a href="http://www.5imoban.net/index.html" target="_blank" rel="external">http://www.5imoban.net/index.html</a> </li><li>查IP <a href="http://www.ip38.com/" target="_blank" rel="external">http://www.ip38.com/</a> </li><li>图标网 <a href="http://www.iconpng.com/" target="_blank" rel="external">http://www.iconpng.com/</a> </li><li>笔试题 <a href="http://www.nowcoder.com/" target="_blank" rel="external">http://www.nowcoder.com/</a></li><li>笔试题 <a href="http://www.bishibaodian.com/" target="_blank" rel="external">http://www.bishibaodian.com/</a> </li><li>在线编译器 <a href="http://www.mcqyy.com/RunCode/java/" target="_blank" rel="external">http://www.mcqyy.com/RunCode/java/</a> </li><li>学习资料 <a href="http://www.hollischuang.com/archives/489" target="_blank" rel="external">http://www.hollischuang.com/archives/489</a> </li><li>gif图片引擎 <a href="http://giphy.com/" target="_blank" rel="external">http://giphy.com/</a> </li><li>node.js教程 <a href="http://www.runoob.com/nodejs/nodejs-tutorial.html" target="_blank" rel="external">http://www.runoob.com/nodejs/nodejs-tutorial.html</a></li><li>蓝灯翻墙 <a href="http://www.iyaxi.com/2015-11-17/732.html" target="_blank" rel="external">http://www.iyaxi.com/2015-11-17/732.html</a> </li><li>翻墙软件 <a href="http://www.ishadowsocks.com/" target="_blank" rel="external">http://www.ishadowsocks.com/</a> </li><li>画报表 <a href="http://www.cnblogs.com/wuhuacong/p/3736564.html" target="_blank" rel="external">http://www.cnblogs.com/wuhuacong/p/3736564.html</a> </li><li>mariaDB <a href="http://www.mariadbpub.com/forum.php" target="_blank" rel="external">http://www.mariadbpub.com/forum.php</a> </li><li>web免刷新工具 <a href="http://www.getf5.com/" target="_blank" rel="external">http://www.getf5.com/</a> </li><li>java开发精选 <a href="http://www.importnew.com/" target="_blank" rel="external">http://www.importnew.com/</a> </li><li>centos下载 <a href="http://www.centoscn.com/CentosSoft/iso/2013/1205/2196.html" target="_blank" rel="external">http://www.centoscn.com/CentosSoft/iso/2013/1205/2196.html</a>   </li><li>破解版虚拟机 <a href="http://www.xp510.com/xiazai/ossoft/desktools/22610.html" target="_blank" rel="external">http://www.xp510.com/xiazai/ossoft/desktools/22610.html</a></li><li>爱词霸翻译 <a href="http://www.iciba.com/" target="_blank" rel="external">http://www.iciba.com/</a><br>-<a href="http://wetest.qq.com/gaps/" target="_blank" rel="external">http://wetest.qq.com/gaps/</a></li><li>画画（万花筒） <a href="http://weavesilk.com/" target="_blank" rel="external">http://weavesilk.com/</a> </li><li>好玩网站 <a href="http://youquhome.com/" target="_blank" rel="external">http://youquhome.com/</a> </li><li>gitpro <a href="https://progit.org/" target="_blank" rel="external">https://progit.org/</a> </li><li>电影 <a href="https://kat.cr/" target="_blank" rel="external">https://kat.cr/</a> </li><li>swagger-ui <a href="http://www.jianshu.com/p/d6626e6bd72c" target="_blank" rel="external">http://www.jianshu.com/p/d6626e6bd72c</a></li><li>游记之蹦极 <a href="http://www.mafengwo.cn/i/1264119.html" target="_blank" rel="external">http://www.mafengwo.cn/i/1264119.html</a></li><li>腾旭测试平台 <a href="http://wetest.qq.com/gaps/" target="_blank" rel="external">http://wetest.qq.com/gaps/</a> </li><li>中文API <a href="http://www.oracle.com/technetwork/cn/java/javase/overview/index.html" target="_blank" rel="external">http://www.oracle.com/technetwork/cn/java/javase/overview/index.html</a> </li><li>标签云 <a href="https://www.jasondavies.com/wordcloud/" target="_blank" rel="external">https://www.jasondavies.com/wordcloud/</a> </li><li>redis教程 <a href="http://www.epubit.com.cn/article/200" target="_blank" rel="external">http://www.epubit.com.cn/article/200</a></li><li>myeclipse优化 <a href="http://blog.163.com/qcb_163/blog/static/95454664201110942121440/" target="_blank" rel="external">http://blog.163.com/qcb_163/blog/static/95454664201110942121440/</a></li><li>云上作业 <a href="https://uzer.me" target="_blank" rel="external">https://uzer.me</a></li><li>文件私有云 <a href="https://www.resilio.com/home/#" target="_blank" rel="external">https://www.resilio.com/home/#</a></li><li>Resilio  Sync<br><a href="https://www.waitsun.com/" target="_blank" rel="external">https://www.waitsun.com/</a></li><li>壁纸 <a href="http://wallpaperswide.com/" target="_blank" rel="external">http://wallpaperswide.com/</a> </li><li>干货 <a href="https://pan.baidu.com/share/home?uk=2586978905#category/type=0" target="_blank" rel="external">https://pan.baidu.com/share/home?uk=2586978905#category/type=0</a> </li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o84sfajoj.bkt.clouddn.com/201510211?imageView2/2/w/900/interlace/0/q/100|watermark/2/text/6ZmI5LqR6L2p/font/6buR5L2T/fontsize/500/fill/I0FEQThBOA==/dissolve/14/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;人主之居也，如日月之明也。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;天下之所同侧目而视，侧耳而听，延颈举踵而望也。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;是故非澹泊（同：淡泊）无以明德，非宁静无以致远，非宽大无以兼覆，&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;非慈厚无以怀众，非平正无以制断。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="干货" scheme="http://chenyunxuan.top/tags/%E5%B9%B2%E8%B4%A7/"/>
    
  </entry>
  
</feed>
